package kr.or.ddit.basic;

public class T14ThreadShareDataTest {
/*
 	원주율을 계산하는 스레드가 있고, 계산된 워주율을 출력하는 스레드가 있다.
 	워주율을 계산한 후 이 값을 출력하는 프로그램을 작성하시오.
 	(이 때 원주율을 저장하는 객체가 필요하다.)
*/
	public static void main(String[] args) {
		
		ShareData sd = new ShareData();
		
		CalcPIThread cth = new CalcPIThread(sd);
		printPIThread pth = new printPIThread(sd);
		
		cth.start();
		pth.start();
		
	}
}

// 공통 객체 -> 원주율을 계산해서 저장
class ShareData{
	
	private double result; // 원주율이 저장될 변수
	
	// volatile
	volatile private boolean isOk = false; // 원주율 계산이 완료되었는지 확인용.
	
	public double getResult() {
		return result;
	}
	public void setResult(double result) {
		this.result = result;
	}
	public boolean isOk() {
		return isOk;
	}
	public void setOk(boolean isOk) {
		this.isOk = isOk;
	}
	
}

// 원주율 계산을 위한 스레드 클래스
class CalcPIThread extends Thread{
	
	private ShareData sd;
	
	public CalcPIThread(ShareData sd) {
		this.sd = sd;
	}
	
	@Override
	public void run() {
	/*
		↓ 원주율 구하는 공식
		원주율 = (1/1 - 1/3 + 1/5 - 1/7 + 1/9 .........) * 4;
				 1  -  3  +  5  -  7  +  9 => 분모
				 0     1     2     3     4 => 분모를 2로 나눈 몫
	 */
		double sum = 0.0;
		for(int i=1; i<=1500000000; i+=2) {
			if( ((i/2) % 2) == 0){
				sum += (1.0 / i);
			}else {
				sum -= (1.0 / i);
			}
		}
		sd.setResult(sum * 4);
		sd.setOk(true); // 원주율 계산이 완료되었음을 나타냄.
	}
	
}

// 계산된 원주율을 출력하는 스레드
class printPIThread extends Thread{
	
	private ShareData sd;
	public printPIThread(ShareData sd) {
		this.sd = sd;
	}
	
	@Override
	public void run() {
		while(true) {
			// 원주율 계산이 완료 될때까지 기다린다.
			if(sd.isOk()) {
				break;
			}
		}
		
		System.out.println();
		System.out.println("계산된 원주율 : " + sd.getResult());
		System.out.println("       PI : " + Math.PI);
	}
}
