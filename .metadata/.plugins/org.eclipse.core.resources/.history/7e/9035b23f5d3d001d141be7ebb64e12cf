package kr.or.ddit.basic;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

public class T08HashMapTest {
	public static void main(String[] args) {
		
		Map<String, String> map = new HashMap<String, String>();
		
		// 자료 추가 => put(key값, value값)
		map.put("name", "홍길동");
		map.put("addr", "대전");
		map.put("tel", "010-1234-5678");
		
		System.out.println("map => " + map);
		
		// 자료 수정 => 데이터를 저장할 때 key값이 같으면 나중에 입력한 값이 저장된다.
		// 			 put(수정할 key값, 새로운 value값)
		map.put("addr", "서울");
		System.out.println("map => " + map);
		
		// 자료 삭제 => remove(삭제할key값)
		map.remove("name");
		System.out.println("map = > " + map);
		
		// 자료 읽기 => get(key값)
		System.out.println("addr => " + map.get("addr"));
		System.out.println("====================================");
		
		// key값들을 읽어와 자료를 출력하는 방법
		
		// 방법1 => keySet()메서드 이용하기
		// 	 ketSet()메서드 => Map의 key값들만 읽어와 Set타입의 객체로 변환한다.
		Set<String> keySet = map.keySet(0);
		
		System.out.println("Iterator를 이용하는 방법");
		Iterator<String> it = keySet.iteratir();
		while(it.hashNset) {
			String key = it.hasNext();
			System.out.println(key + " : " + map.get(key));
		}
		
		// 방법2 => Set타입의 객체를 '향상된 for'문으로 처리하는 방법
		System.out.println("향상된 for문을 이용하는 방법");
		for(String key : keySet) {
			System.out.println(key + " : " + map.get(key));
		}
		System.out.println("-------------------------------------");
		
		
	}
}
